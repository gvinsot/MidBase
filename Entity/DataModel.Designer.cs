//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DataModel", "DesignZone", "Design", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.Design), "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Zone), true)]
[assembly: EdmRelationshipAttribute("DataModel", "ZonePlaylist", "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.Zone), "Playlist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.MediaContainer))]
[assembly: EdmRelationshipAttribute("DataModel", "PlaylistMediaMedia", "PlaylistMedia", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.MediaContained), "Media", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.Media))]
[assembly: EdmRelationshipAttribute("DataModel", "MediaContainerMediaContained", "MediaContainer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.MediaContainer), "MediaContained", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.MediaContained))]
[assembly: EdmRelationshipAttribute("DataModel", "WorkgroupHardware", "Workgroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.Workgroup), "Hardware", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Hardware), true)]
[assembly: EdmRelationshipAttribute("DataModel", "WorkgroupUser", "Workgroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Workgroup), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.User))]
[assembly: EdmRelationshipAttribute("DataModel", "ExternalProgramFile", "ExternalProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.ExternalProgram), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.File))]
[assembly: EdmRelationshipAttribute("DataModel", "FlashFile", "Flash", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Flash), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.File))]
[assembly: EdmRelationshipAttribute("DataModel", "ImageFile", "Image", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Image), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.File))]
[assembly: EdmRelationshipAttribute("DataModel", "VideoFile", "Video", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Video), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.File))]
[assembly: EdmRelationshipAttribute("DataModel", "FeedFile", "Feed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Feed), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.File))]
[assembly: EdmRelationshipAttribute("DataModel", "MediaTrigger", "Media", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.Media), "Trigger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Trigger), true)]
[assembly: EdmRelationshipAttribute("DataModel", "MediaContainerHardware", "MediaContainer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.MediaContainer), "Hardware", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Hardware), true)]
[assembly: EdmRelationshipAttribute("DataModel", "WorkgroupWorkgroup", "Workgroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Entity.Workgroup), "Workgroup1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Workgroup), true)]
[assembly: EdmRelationshipAttribute("DataModel", "WorkgroupBandwidthSettings", "Workgroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Workgroup), "BandwidthSettings", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Entity.BandwidthSettings))]
[assembly: EdmRelationshipAttribute("DataModel", "WorkgroupOpeningHours", "Workgroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Workgroup), "OpeningHours", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Entity.OpeningHours))]
[assembly: EdmRelationshipAttribute("DataModel", "HardwareOpeningHours", "Hardware", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Hardware), "OpeningHours", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Entity.OpeningHours))]
[assembly: EdmRelationshipAttribute("DataModel", "HardwareConnectionSettings", "Hardware", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Hardware), "ConnectionSettings", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Entity.ConnectionSettings))]
[assembly: EdmRelationshipAttribute("DataModel", "HardwareBandwidthSettings", "Hardware", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Hardware), "BandwidthSettings", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Entity.BandwidthSettings))]
[assembly: EdmRelationshipAttribute("DataModel", "WorkgroupConnectionSettings", "Workgroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Workgroup), "ConnectionSettings", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Entity.ConnectionSettings))]
[assembly: EdmRelationshipAttribute("DataModel", "WorkgroupMediaRight", "Workgroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.Workgroup), "MediaRight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.MediaRight), true)]
[assembly: EdmRelationshipAttribute("DataModel", "MediaRightMedia", "MediaRight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.MediaRight), "Media", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.Media))]
[assembly: EdmRelationshipAttribute("DataModel", "GroupWorkgroup", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Group), "Workgroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Workgroup))]
[assembly: EdmRelationshipAttribute("DataModel", "WorkgroupMediaOwner", "Media", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.Media), "Workgroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.Workgroup))]
[assembly: EdmRelationshipAttribute("DataModel", "UserUserRights", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entity.User), "UserRights", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entity.UserRights), true)]

#endregion

namespace Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataModelContainer object using the connection string found in the 'DataModelContainer' section of the application configuration file.
        /// </summary>
        public DataModelContainer() : base("name=DataModelContainer", "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(string connectionString) : base(connectionString, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataModelContainer object.
        /// </summary>
        public DataModelContainer(EntityConnection connection) : base(connection, "DataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Media> MediaSet
        {
            get
            {
                if ((_MediaSet == null))
                {
                    _MediaSet = base.CreateObjectSet<Media>("MediaSet");
                }
                return _MediaSet;
            }
        }
        private ObjectSet<Media> _MediaSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Zone> ZoneSet
        {
            get
            {
                if ((_ZoneSet == null))
                {
                    _ZoneSet = base.CreateObjectSet<Zone>("ZoneSet");
                }
                return _ZoneSet;
            }
        }
        private ObjectSet<Zone> _ZoneSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MediaContained> MediaContainedSet
        {
            get
            {
                if ((_MediaContainedSet == null))
                {
                    _MediaContainedSet = base.CreateObjectSet<MediaContained>("MediaContainedSet");
                }
                return _MediaContainedSet;
            }
        }
        private ObjectSet<MediaContained> _MediaContainedSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> UserSet
        {
            get
            {
                if ((_UserSet == null))
                {
                    _UserSet = base.CreateObjectSet<User>("UserSet");
                }
                return _UserSet;
            }
        }
        private ObjectSet<User> _UserSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Workgroup> WorkgroupSet
        {
            get
            {
                if ((_WorkgroupSet == null))
                {
                    _WorkgroupSet = base.CreateObjectSet<Workgroup>("WorkgroupSet");
                }
                return _WorkgroupSet;
            }
        }
        private ObjectSet<Workgroup> _WorkgroupSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Hardware> HardwareSet
        {
            get
            {
                if ((_HardwareSet == null))
                {
                    _HardwareSet = base.CreateObjectSet<Hardware>("HardwareSet");
                }
                return _HardwareSet;
            }
        }
        private ObjectSet<Hardware> _HardwareSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> FileSet
        {
            get
            {
                if ((_FileSet == null))
                {
                    _FileSet = base.CreateObjectSet<File>("FileSet");
                }
                return _FileSet;
            }
        }
        private ObjectSet<File> _FileSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trigger> TriggerSet
        {
            get
            {
                if ((_TriggerSet == null))
                {
                    _TriggerSet = base.CreateObjectSet<Trigger>("TriggerSet");
                }
                return _TriggerSet;
            }
        }
        private ObjectSet<Trigger> _TriggerSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BandwidthSettings> BandwidthSettingsSet
        {
            get
            {
                if ((_BandwidthSettingsSet == null))
                {
                    _BandwidthSettingsSet = base.CreateObjectSet<BandwidthSettings>("BandwidthSettingsSet");
                }
                return _BandwidthSettingsSet;
            }
        }
        private ObjectSet<BandwidthSettings> _BandwidthSettingsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OpeningHours> OpeningHoursSet
        {
            get
            {
                if ((_OpeningHoursSet == null))
                {
                    _OpeningHoursSet = base.CreateObjectSet<OpeningHours>("OpeningHoursSet");
                }
                return _OpeningHoursSet;
            }
        }
        private ObjectSet<OpeningHours> _OpeningHoursSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConnectionSettings> ConnectionSettingsSet
        {
            get
            {
                if ((_ConnectionSettingsSet == null))
                {
                    _ConnectionSettingsSet = base.CreateObjectSet<ConnectionSettings>("ConnectionSettingsSet");
                }
                return _ConnectionSettingsSet;
            }
        }
        private ObjectSet<ConnectionSettings> _ConnectionSettingsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MediaRight> MediaRightSet
        {
            get
            {
                if ((_MediaRightSet == null))
                {
                    _MediaRightSet = base.CreateObjectSet<MediaRight>("MediaRightSet");
                }
                return _MediaRightSet;
            }
        }
        private ObjectSet<MediaRight> _MediaRightSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> GroupSet
        {
            get
            {
                if ((_GroupSet == null))
                {
                    _GroupSet = base.CreateObjectSet<Group>("GroupSet");
                }
                return _GroupSet;
            }
        }
        private ObjectSet<Group> _GroupSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRights> UserRightsSet
        {
            get
            {
                if ((_UserRightsSet == null))
                {
                    _UserRightsSet = base.CreateObjectSet<UserRights>("UserRightsSet");
                }
                return _UserRightsSet;
            }
        }
        private ObjectSet<UserRights> _UserRightsSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaSet(Media media)
        {
            base.AddObject("MediaSet", media);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ZoneSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZoneSet(Zone zone)
        {
            base.AddObject("ZoneSet", zone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaContainedSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaContainedSet(MediaContained mediaContained)
        {
            base.AddObject("MediaContainedSet", mediaContained);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSet(User user)
        {
            base.AddObject("UserSet", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkgroupSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkgroupSet(Workgroup workgroup)
        {
            base.AddObject("WorkgroupSet", workgroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HardwareSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHardwareSet(Hardware hardware)
        {
            base.AddObject("HardwareSet", hardware);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileSet(File file)
        {
            base.AddObject("FileSet", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TriggerSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTriggerSet(Trigger trigger)
        {
            base.AddObject("TriggerSet", trigger);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BandwidthSettingsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBandwidthSettingsSet(BandwidthSettings bandwidthSettings)
        {
            base.AddObject("BandwidthSettingsSet", bandwidthSettings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OpeningHoursSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOpeningHoursSet(OpeningHours openingHours)
        {
            base.AddObject("OpeningHoursSet", openingHours);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConnectionSettingsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConnectionSettingsSet(ConnectionSettings connectionSettings)
        {
            base.AddObject("ConnectionSettingsSet", connectionSettings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaRightSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaRightSet(MediaRight mediaRight)
        {
            base.AddObject("MediaRightSet", mediaRight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupSet(Group group)
        {
            base.AddObject("GroupSet", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRightsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRightsSet(UserRights userRights)
        {
            base.AddObject("UserRightsSet", userRights);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="BandwidthSettings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BandwidthSettings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BandwidthSettings object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static BandwidthSettings CreateBandwidthSettings(global::System.Int64 id)
        {
            BandwidthSettings bandwidthSettings = new BandwidthSettings();
            bandwidthSettings.Id = id;
            return bandwidthSettings;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupBandwidthSettings", "Workgroup")]
        public EntityCollection<Workgroup> Workgroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Workgroup>("DataModel.WorkgroupBandwidthSettings", "Workgroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Workgroup>("DataModel.WorkgroupBandwidthSettings", "Workgroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "HardwareBandwidthSettings", "Hardware")]
        public EntityCollection<Hardware> Hardware
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hardware>("DataModel.HardwareBandwidthSettings", "Hardware");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hardware>("DataModel.HardwareBandwidthSettings", "Hardware", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ConnectionSettings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConnectionSettings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConnectionSettings object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ConnectionSettings CreateConnectionSettings(global::System.Int64 id)
        {
            ConnectionSettings connectionSettings = new ConnectionSettings();
            connectionSettings.Id = id;
            return connectionSettings;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "HardwareConnectionSettings", "Hardware")]
        public EntityCollection<Hardware> Hardware
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hardware>("DataModel.HardwareConnectionSettings", "Hardware");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hardware>("DataModel.HardwareConnectionSettings", "Hardware", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupConnectionSettings", "Workgroup")]
        public EntityCollection<Workgroup> Workgroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Workgroup>("DataModel.WorkgroupConnectionSettings", "Workgroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Workgroup>("DataModel.WorkgroupConnectionSettings", "Workgroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Design")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Design : Media
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Design object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Design CreateDesign(global::System.Int64 id, global::System.TimeSpan duration, global::System.String name)
        {
            Design design = new Design();
            design.Id = id;
            design.Duration = duration;
            design.Name = name;
            return design;
        }

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "DesignZone", "Zone")]
        public EntityCollection<Zone> Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Zone>("DataModel.DesignZone", "Zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Zone>("DataModel.DesignZone", "Zone", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ExternalProgram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExternalProgram : Media
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExternalProgram object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ExternalProgram CreateExternalProgram(global::System.Int64 id, global::System.TimeSpan duration, global::System.String name)
        {
            ExternalProgram externalProgram = new ExternalProgram();
            externalProgram.Id = id;
            externalProgram.Duration = duration;
            externalProgram.Name = name;
            return externalProgram;
        }

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ExternalProgramFile", "File")]
        public EntityCollection<File> File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("DataModel.ExternalProgramFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("DataModel.ExternalProgramFile", "File", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Feed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feed : Media
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Feed object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Feed CreateFeed(global::System.Int64 id, global::System.TimeSpan duration, global::System.String name)
        {
            Feed feed = new Feed();
            feed.Id = id;
            feed.Duration = duration;
            feed.Name = name;
            return feed;
        }

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FeedFile", "File")]
        public EntityCollection<File> File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("DataModel.FeedFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("DataModel.FeedFile", "File", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        public static File CreateFile(global::System.Int64 id, global::System.String path)
        {
            File file = new File();
            file.Id = id;
            file.Path = path;
            return file;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> OriginalDuration
        {
            get
            {
                return _OriginalDuration;
            }
            set
            {
                OnOriginalDurationChanging(value);
                ReportPropertyChanging("OriginalDuration");
                _OriginalDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalDuration");
                OnOriginalDurationChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _OriginalDuration;
        partial void OnOriginalDurationChanging(Nullable<global::System.TimeSpan> value);
        partial void OnOriginalDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Height;
        partial void OnHeightChanging(Nullable<global::System.Int32> value);
        partial void OnHeightChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ExternalProgramFile", "ExternalProgram")]
        public EntityCollection<ExternalProgram> ExternalProgram
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExternalProgram>("DataModel.ExternalProgramFile", "ExternalProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExternalProgram>("DataModel.ExternalProgramFile", "ExternalProgram", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FlashFile", "Flash")]
        public EntityCollection<Flash> Flash
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Flash>("DataModel.FlashFile", "Flash");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Flash>("DataModel.FlashFile", "Flash", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ImageFile", "Image")]
        public EntityCollection<Image> Image
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("DataModel.ImageFile", "Image");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("DataModel.ImageFile", "Image", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "VideoFile", "Video")]
        public EntityCollection<Video> Video
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Video>("DataModel.VideoFile", "Video");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Video>("DataModel.VideoFile", "Video", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FeedFile", "Feed")]
        public EntityCollection<Feed> Feed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Feed>("DataModel.FeedFile", "Feed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Feed>("DataModel.FeedFile", "Feed", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Flash")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Flash : Media
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Flash object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Flash CreateFlash(global::System.Int64 id, global::System.TimeSpan duration, global::System.String name)
        {
            Flash flash = new Flash();
            flash.Id = id;
            flash.Duration = duration;
            flash.Name = name;
            return flash;
        }

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FlashFile", "File")]
        public EntityCollection<File> File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("DataModel.FlashFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("DataModel.FlashFile", "File", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Group CreateGroup(global::System.Int64 id)
        {
            Group group = new Group();
            group.Id = id;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupWorkgroup", "Workgroup")]
        public EntityCollection<Workgroup> Workgroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Workgroup>("DataModel.GroupWorkgroup", "Workgroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Workgroup>("DataModel.GroupWorkgroup", "Workgroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Hardware")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hardware : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Hardware object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="workgroupId">Initial value of the WorkgroupId property.</param>
        /// <param name="mediaContainerId">Initial value of the MediaContainerId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="mac">Initial value of the Mac property.</param>
        /// <param name="lastReport">Initial value of the LastReport property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="lastErrorMessage">Initial value of the LastErrorMessage property.</param>
        public static Hardware CreateHardware(global::System.Int64 id, global::System.Int64 workgroupId, global::System.Int64 mediaContainerId, global::System.String name, global::System.String mac, global::System.DateTime lastReport, global::System.Int32 status, global::System.String lastErrorMessage)
        {
            Hardware hardware = new Hardware();
            hardware.Id = id;
            hardware.WorkgroupId = workgroupId;
            hardware.MediaContainerId = mediaContainerId;
            hardware.Name = name;
            hardware.Mac = mac;
            hardware.LastReport = lastReport;
            hardware.Status = status;
            hardware.LastErrorMessage = lastErrorMessage;
            return hardware;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WorkgroupId
        {
            get
            {
                return _WorkgroupId;
            }
            set
            {
                OnWorkgroupIdChanging(value);
                ReportPropertyChanging("WorkgroupId");
                _WorkgroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkgroupId");
                OnWorkgroupIdChanged();
            }
        }
        private global::System.Int64 _WorkgroupId;
        partial void OnWorkgroupIdChanging(global::System.Int64 value);
        partial void OnWorkgroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MediaContainerId
        {
            get
            {
                return _MediaContainerId;
            }
            set
            {
                OnMediaContainerIdChanging(value);
                ReportPropertyChanging("MediaContainerId");
                _MediaContainerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MediaContainerId");
                OnMediaContainerIdChanged();
            }
        }
        private global::System.Int64 _MediaContainerId;
        partial void OnMediaContainerIdChanging(global::System.Int64 value);
        partial void OnMediaContainerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VirtualScreenWidth
        {
            get
            {
                return _VirtualScreenWidth;
            }
            set
            {
                OnVirtualScreenWidthChanging(value);
                ReportPropertyChanging("VirtualScreenWidth");
                _VirtualScreenWidth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualScreenWidth");
                OnVirtualScreenWidthChanged();
            }
        }
        private global::System.Int32 _VirtualScreenWidth = 1920;
        partial void OnVirtualScreenWidthChanging(global::System.Int32 value);
        partial void OnVirtualScreenWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VirtualScreenHeight
        {
            get
            {
                return _VirtualScreenHeight;
            }
            set
            {
                OnVirtualScreenHeightChanging(value);
                ReportPropertyChanging("VirtualScreenHeight");
                _VirtualScreenHeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualScreenHeight");
                OnVirtualScreenHeightChanged();
            }
        }
        private global::System.Int32 _VirtualScreenHeight = 1080;
        partial void OnVirtualScreenHeightChanging(global::System.Int32 value);
        partial void OnVirtualScreenHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mac
        {
            get
            {
                return _Mac;
            }
            set
            {
                OnMacChanging(value);
                ReportPropertyChanging("Mac");
                _Mac = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mac");
                OnMacChanged();
            }
        }
        private global::System.String _Mac;
        partial void OnMacChanging(global::System.String value);
        partial void OnMacChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastReport
        {
            get
            {
                return _LastReport;
            }
            set
            {
                OnLastReportChanging(value);
                ReportPropertyChanging("LastReport");
                _LastReport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastReport");
                OnLastReportChanged();
            }
        }
        private global::System.DateTime _LastReport;
        partial void OnLastReportChanging(global::System.DateTime value);
        partial void OnLastReportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastErrorMessage
        {
            get
            {
                return _LastErrorMessage;
            }
            set
            {
                OnLastErrorMessageChanging(value);
                ReportPropertyChanging("LastErrorMessage");
                _LastErrorMessage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastErrorMessage");
                OnLastErrorMessageChanged();
            }
        }
        private global::System.String _LastErrorMessage;
        partial void OnLastErrorMessageChanging(global::System.String value);
        partial void OnLastErrorMessageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupHardware", "Workgroup")]
        public Workgroup Workgroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupHardware", "Workgroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupHardware", "Workgroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Workgroup> WorkgroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupHardware", "Workgroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Workgroup>("DataModel.WorkgroupHardware", "Workgroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "MediaContainerHardware", "MediaContainer")]
        public MediaContainer Playlist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaContainer>("DataModel.MediaContainerHardware", "MediaContainer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaContainer>("DataModel.MediaContainerHardware", "MediaContainer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MediaContainer> PlaylistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaContainer>("DataModel.MediaContainerHardware", "MediaContainer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MediaContainer>("DataModel.MediaContainerHardware", "MediaContainer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "HardwareOpeningHours", "OpeningHours")]
        public OpeningHours OpeningHours
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OpeningHours>("DataModel.HardwareOpeningHours", "OpeningHours").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OpeningHours>("DataModel.HardwareOpeningHours", "OpeningHours").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OpeningHours> OpeningHoursReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OpeningHours>("DataModel.HardwareOpeningHours", "OpeningHours");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OpeningHours>("DataModel.HardwareOpeningHours", "OpeningHours", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "HardwareConnectionSettings", "ConnectionSettings")]
        public ConnectionSettings ConnectionSettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConnectionSettings>("DataModel.HardwareConnectionSettings", "ConnectionSettings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConnectionSettings>("DataModel.HardwareConnectionSettings", "ConnectionSettings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConnectionSettings> ConnectionSettingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConnectionSettings>("DataModel.HardwareConnectionSettings", "ConnectionSettings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConnectionSettings>("DataModel.HardwareConnectionSettings", "ConnectionSettings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "HardwareBandwidthSettings", "BandwidthSettings")]
        public BandwidthSettings BandwidthSettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BandwidthSettings>("DataModel.HardwareBandwidthSettings", "BandwidthSettings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BandwidthSettings>("DataModel.HardwareBandwidthSettings", "BandwidthSettings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BandwidthSettings> BandwidthSettingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BandwidthSettings>("DataModel.HardwareBandwidthSettings", "BandwidthSettings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BandwidthSettings>("DataModel.HardwareBandwidthSettings", "BandwidthSettings", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : Media
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Image object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="aspect">Initial value of the Aspect property.</param>
        public static Image CreateImage(global::System.Int64 id, global::System.TimeSpan duration, global::System.String name, global::System.Int32 aspect)
        {
            Image image = new Image();
            image.Id = id;
            image.Duration = duration;
            image.Name = name;
            image.Aspect = aspect;
            return image;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Aspect
        {
            get
            {
                return _Aspect;
            }
            set
            {
                OnAspectChanging(value);
                ReportPropertyChanging("Aspect");
                _Aspect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Aspect");
                OnAspectChanged();
            }
        }
        private global::System.Int32 _Aspect;
        partial void OnAspectChanging(global::System.Int32 value);
        partial void OnAspectChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ImageFile", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DataModel.ImageFile", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DataModel.ImageFile", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DataModel.ImageFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("DataModel.ImageFile", "File", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="KeyboardEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KeyboardEvent : Trigger
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KeyboardEvent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mediaId">Initial value of the MediaId property.</param>
        public static KeyboardEvent CreateKeyboardEvent(global::System.Int64 id, global::System.Int64 mediaId)
        {
            KeyboardEvent keyboardEvent = new KeyboardEvent();
            keyboardEvent.Id = id;
            keyboardEvent.MediaId = mediaId;
            return keyboardEvent;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Media")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Design))]
    [KnownTypeAttribute(typeof(MediaContainer))]
    [KnownTypeAttribute(typeof(ExternalProgram))]
    [KnownTypeAttribute(typeof(Flash))]
    [KnownTypeAttribute(typeof(Image))]
    [KnownTypeAttribute(typeof(Video))]
    [KnownTypeAttribute(typeof(Feed))]
    [KnownTypeAttribute(typeof(Text))]
    [KnownTypeAttribute(typeof(Url))]
    [KnownTypeAttribute(typeof(Streaming))]
    public partial class Media : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Media object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Media CreateMedia(global::System.Int64 id, global::System.TimeSpan duration, global::System.String name)
        {
            Media media = new Media();
            media.Id = id;
            media.Duration = duration;
            media.Name = name;
            return media;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.TimeSpan _Duration;
        partial void OnDurationChanging(global::System.TimeSpan value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "PlaylistMediaMedia", "PlaylistMedia")]
        public EntityCollection<MediaContained> PlaylistsReferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MediaContained>("DataModel.PlaylistMediaMedia", "PlaylistMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MediaContained>("DataModel.PlaylistMediaMedia", "PlaylistMedia", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "MediaTrigger", "Trigger")]
        public EntityCollection<Trigger> Trigger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trigger>("DataModel.MediaTrigger", "Trigger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trigger>("DataModel.MediaTrigger", "Trigger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "MediaRightMedia", "MediaRight")]
        public EntityCollection<MediaRight> MediaRight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MediaRight>("DataModel.MediaRightMedia", "MediaRight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MediaRight>("DataModel.MediaRightMedia", "MediaRight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupMediaOwner", "Workgroup")]
        public Workgroup OwnerWorkgroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupMediaOwner", "Workgroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupMediaOwner", "Workgroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Workgroup> OwnerWorkgroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupMediaOwner", "Workgroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Workgroup>("DataModel.WorkgroupMediaOwner", "Workgroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="MediaContained")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaContained : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaContained object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="playlistId">Initial value of the PlaylistId property.</param>
        /// <param name="order">Initial value of the Order property.</param>
        public static MediaContained CreateMediaContained(global::System.Int64 id, global::System.Int64 playlistId, global::System.String order)
        {
            MediaContained mediaContained = new MediaContained();
            mediaContained.Id = id;
            mediaContained.PlaylistId = playlistId;
            mediaContained.Order = order;
            return mediaContained;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PlaylistId
        {
            get
            {
                return _PlaylistId;
            }
            set
            {
                OnPlaylistIdChanging(value);
                ReportPropertyChanging("PlaylistId");
                _PlaylistId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaylistId");
                OnPlaylistIdChanged();
            }
        }
        private global::System.Int64 _PlaylistId;
        partial void OnPlaylistIdChanging(global::System.Int64 value);
        partial void OnPlaylistIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private global::System.String _Order;
        partial void OnOrderChanging(global::System.String value);
        partial void OnOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "PlaylistMediaMedia", "Media")]
        public Media Media
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("DataModel.PlaylistMediaMedia", "Media").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("DataModel.PlaylistMediaMedia", "Media").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Media> MediaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("DataModel.PlaylistMediaMedia", "Media");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Media>("DataModel.PlaylistMediaMedia", "Media", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "MediaContainerMediaContained", "MediaContainer")]
        public MediaContainer MediaContainer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaContainer>("DataModel.MediaContainerMediaContained", "MediaContainer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaContainer>("DataModel.MediaContainerMediaContained", "MediaContainer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MediaContainer> MediaContainerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaContainer>("DataModel.MediaContainerMediaContained", "MediaContainer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MediaContainer>("DataModel.MediaContainerMediaContained", "MediaContainer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="MediaContainer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaContainer : Media
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaContainer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isRandom">Initial value of the IsRandom property.</param>
        /// <param name="nbItemsToPlay">Initial value of the NbItemsToPlay property.</param>
        /// <param name="allowedTypes">Initial value of the AllowedTypes property.</param>
        public static MediaContainer CreateMediaContainer(global::System.Int64 id, global::System.TimeSpan duration, global::System.String name, global::System.Boolean isRandom, global::System.Int32 nbItemsToPlay, global::System.String allowedTypes)
        {
            MediaContainer mediaContainer = new MediaContainer();
            mediaContainer.Id = id;
            mediaContainer.Duration = duration;
            mediaContainer.Name = name;
            mediaContainer.IsRandom = isRandom;
            mediaContainer.NbItemsToPlay = nbItemsToPlay;
            mediaContainer.AllowedTypes = allowedTypes;
            return mediaContainer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRandom
        {
            get
            {
                return _IsRandom;
            }
            set
            {
                OnIsRandomChanging(value);
                ReportPropertyChanging("IsRandom");
                _IsRandom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRandom");
                OnIsRandomChanged();
            }
        }
        private global::System.Boolean _IsRandom;
        partial void OnIsRandomChanging(global::System.Boolean value);
        partial void OnIsRandomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NbItemsToPlay
        {
            get
            {
                return _NbItemsToPlay;
            }
            set
            {
                OnNbItemsToPlayChanging(value);
                ReportPropertyChanging("NbItemsToPlay");
                _NbItemsToPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NbItemsToPlay");
                OnNbItemsToPlayChanged();
            }
        }
        private global::System.Int32 _NbItemsToPlay;
        partial void OnNbItemsToPlayChanging(global::System.Int32 value);
        partial void OnNbItemsToPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AllowedTypes
        {
            get
            {
                return _AllowedTypes;
            }
            set
            {
                OnAllowedTypesChanging(value);
                ReportPropertyChanging("AllowedTypes");
                _AllowedTypes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AllowedTypes");
                OnAllowedTypesChanged();
            }
        }
        private global::System.String _AllowedTypes;
        partial void OnAllowedTypesChanging(global::System.String value);
        partial void OnAllowedTypesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ZonePlaylist", "Zone")]
        public Zone Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("DataModel.ZonePlaylist", "Zone").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("DataModel.ZonePlaylist", "Zone").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Zone> ZoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("DataModel.ZonePlaylist", "Zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Zone>("DataModel.ZonePlaylist", "Zone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "MediaContainerMediaContained", "MediaContained")]
        public EntityCollection<MediaContained> MediaContained
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MediaContained>("DataModel.MediaContainerMediaContained", "MediaContained");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MediaContained>("DataModel.MediaContainerMediaContained", "MediaContained", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "MediaContainerHardware", "Hardware")]
        public EntityCollection<Hardware> Hardwares
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hardware>("DataModel.MediaContainerHardware", "Hardware");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hardware>("DataModel.MediaContainerHardware", "Hardware", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="MediaRight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaRight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaRight object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="workgroupId">Initial value of the WorkgroupId property.</param>
        public static MediaRight CreateMediaRight(global::System.Int64 id, global::System.Int64 workgroupId)
        {
            MediaRight mediaRight = new MediaRight();
            mediaRight.Id = id;
            mediaRight.WorkgroupId = workgroupId;
            return mediaRight;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WorkgroupId
        {
            get
            {
                return _WorkgroupId;
            }
            set
            {
                OnWorkgroupIdChanging(value);
                ReportPropertyChanging("WorkgroupId");
                _WorkgroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkgroupId");
                OnWorkgroupIdChanged();
            }
        }
        private global::System.Int64 _WorkgroupId;
        partial void OnWorkgroupIdChanging(global::System.Int64 value);
        partial void OnWorkgroupIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupMediaRight", "Workgroup")]
        public Workgroup Workgroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupMediaRight", "Workgroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupMediaRight", "Workgroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Workgroup> WorkgroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupMediaRight", "Workgroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Workgroup>("DataModel.WorkgroupMediaRight", "Workgroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "MediaRightMedia", "Media")]
        public Media Media
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("DataModel.MediaRightMedia", "Media").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("DataModel.MediaRightMedia", "Media").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Media> MediaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("DataModel.MediaRightMedia", "Media");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Media>("DataModel.MediaRightMedia", "Media", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="MouseEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MouseEvent : Trigger
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MouseEvent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mediaId">Initial value of the MediaId property.</param>
        public static MouseEvent CreateMouseEvent(global::System.Int64 id, global::System.Int64 mediaId)
        {
            MouseEvent mouseEvent = new MouseEvent();
            mouseEvent.Id = id;
            mouseEvent.MediaId = mediaId;
            return mouseEvent;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="NetworkEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetworkEvent : Trigger
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetworkEvent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mediaId">Initial value of the MediaId property.</param>
        public static NetworkEvent CreateNetworkEvent(global::System.Int64 id, global::System.Int64 mediaId)
        {
            NetworkEvent networkEvent = new NetworkEvent();
            networkEvent.Id = id;
            networkEvent.MediaId = mediaId;
            return networkEvent;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="OpeningHours")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OpeningHours : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OpeningHours object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static OpeningHours CreateOpeningHours(global::System.Int64 id)
        {
            OpeningHours openingHours = new OpeningHours();
            openingHours.Id = id;
            return openingHours;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupOpeningHours", "Workgroup")]
        public EntityCollection<Workgroup> Workgroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Workgroup>("DataModel.WorkgroupOpeningHours", "Workgroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Workgroup>("DataModel.WorkgroupOpeningHours", "Workgroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "HardwareOpeningHours", "Hardware")]
        public EntityCollection<Hardware> Hardware
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hardware>("DataModel.HardwareOpeningHours", "Hardware");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hardware>("DataModel.HardwareOpeningHours", "Hardware", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Planning")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Planning : Trigger
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Planning object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mediaId">Initial value of the MediaId property.</param>
        public static Planning CreatePlanning(global::System.Int64 id, global::System.Int64 mediaId)
        {
            Planning planning = new Planning();
            planning.Id = id;
            planning.MediaId = mediaId;
            return planning;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> DayStartTime
        {
            get
            {
                return _DayStartTime;
            }
            set
            {
                OnDayStartTimeChanging(value);
                ReportPropertyChanging("DayStartTime");
                _DayStartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayStartTime");
                OnDayStartTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _DayStartTime;
        partial void OnDayStartTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnDayStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> DayEndTime
        {
            get
            {
                return _DayEndTime;
            }
            set
            {
                OnDayEndTimeChanging(value);
                ReportPropertyChanging("DayEndTime");
                _DayEndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayEndTime");
                OnDayEndTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _DayEndTime;
        partial void OnDayEndTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnDayEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOnMonday
        {
            get
            {
                return _IsOnMonday;
            }
            set
            {
                OnIsOnMondayChanging(value);
                ReportPropertyChanging("IsOnMonday");
                _IsOnMonday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnMonday");
                OnIsOnMondayChanged();
            }
        }
        private global::System.Boolean _IsOnMonday = true;
        partial void OnIsOnMondayChanging(global::System.Boolean value);
        partial void OnIsOnMondayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOnTuesday
        {
            get
            {
                return _IsOnTuesday;
            }
            set
            {
                OnIsOnTuesdayChanging(value);
                ReportPropertyChanging("IsOnTuesday");
                _IsOnTuesday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnTuesday");
                OnIsOnTuesdayChanged();
            }
        }
        private global::System.Boolean _IsOnTuesday = true;
        partial void OnIsOnTuesdayChanging(global::System.Boolean value);
        partial void OnIsOnTuesdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOnWednesday
        {
            get
            {
                return _IsOnWednesday;
            }
            set
            {
                OnIsOnWednesdayChanging(value);
                ReportPropertyChanging("IsOnWednesday");
                _IsOnWednesday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnWednesday");
                OnIsOnWednesdayChanged();
            }
        }
        private global::System.Boolean _IsOnWednesday = true;
        partial void OnIsOnWednesdayChanging(global::System.Boolean value);
        partial void OnIsOnWednesdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOnThursday
        {
            get
            {
                return _IsOnThursday;
            }
            set
            {
                OnIsOnThursdayChanging(value);
                ReportPropertyChanging("IsOnThursday");
                _IsOnThursday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnThursday");
                OnIsOnThursdayChanged();
            }
        }
        private global::System.Boolean _IsOnThursday = true;
        partial void OnIsOnThursdayChanging(global::System.Boolean value);
        partial void OnIsOnThursdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOnFriday
        {
            get
            {
                return _IsOnFriday;
            }
            set
            {
                OnIsOnFridayChanging(value);
                ReportPropertyChanging("IsOnFriday");
                _IsOnFriday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnFriday");
                OnIsOnFridayChanged();
            }
        }
        private global::System.Boolean _IsOnFriday = true;
        partial void OnIsOnFridayChanging(global::System.Boolean value);
        partial void OnIsOnFridayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOnSaturday
        {
            get
            {
                return _IsOnSaturday;
            }
            set
            {
                OnIsOnSaturdayChanging(value);
                ReportPropertyChanging("IsOnSaturday");
                _IsOnSaturday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnSaturday");
                OnIsOnSaturdayChanged();
            }
        }
        private global::System.Boolean _IsOnSaturday = true;
        partial void OnIsOnSaturdayChanging(global::System.Boolean value);
        partial void OnIsOnSaturdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOnSunday
        {
            get
            {
                return _IsOnSunday;
            }
            set
            {
                OnIsOnSundayChanging(value);
                ReportPropertyChanging("IsOnSunday");
                _IsOnSunday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnSunday");
                OnIsOnSundayChanged();
            }
        }
        private global::System.Boolean _IsOnSunday = true;
        partial void OnIsOnSundayChanging(global::System.Boolean value);
        partial void OnIsOnSundayChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Streaming")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Streaming : Media
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Streaming object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        public static Streaming CreateStreaming(global::System.Int64 id, global::System.TimeSpan duration, global::System.String name, global::System.String url, global::System.String volume)
        {
            Streaming streaming = new Streaming();
            streaming.Id = id;
            streaming.Duration = duration;
            streaming.Name = name;
            streaming.Url = url;
            streaming.Volume = volume;
            return streaming;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.String _Volume;
        partial void OnVolumeChanging(global::System.String value);
        partial void OnVolumeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Text")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Text : Media
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Text object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Text CreateText(global::System.Int64 id, global::System.TimeSpan duration, global::System.String name, global::System.String value)
        {
            Text text = new Text();
            text.Id = id;
            text.Duration = duration;
            text.Name = name;
            text.Value = value;
            return text;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="TimerEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimerEvent : Trigger
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimerEvent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mediaId">Initial value of the MediaId property.</param>
        public static TimerEvent CreateTimerEvent(global::System.Int64 id, global::System.Int64 mediaId)
        {
            TimerEvent timerEvent = new TimerEvent();
            timerEvent.Id = id;
            timerEvent.MediaId = mediaId;
            return timerEvent;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Trigger")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Planning))]
    [KnownTypeAttribute(typeof(KeyboardEvent))]
    [KnownTypeAttribute(typeof(TimerEvent))]
    [KnownTypeAttribute(typeof(MouseEvent))]
    [KnownTypeAttribute(typeof(UsbEvent))]
    [KnownTypeAttribute(typeof(NetworkEvent))]
    public partial class Trigger : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trigger object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mediaId">Initial value of the MediaId property.</param>
        public static Trigger CreateTrigger(global::System.Int64 id, global::System.Int64 mediaId)
        {
            Trigger trigger = new Trigger();
            trigger.Id = id;
            trigger.MediaId = mediaId;
            return trigger;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MediaId
        {
            get
            {
                return _MediaId;
            }
            set
            {
                OnMediaIdChanging(value);
                ReportPropertyChanging("MediaId");
                _MediaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MediaId");
                OnMediaIdChanged();
            }
        }
        private global::System.Int64 _MediaId;
        partial void OnMediaIdChanging(global::System.Int64 value);
        partial void OnMediaIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "MediaTrigger", "Media")]
        public Media Media
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("DataModel.MediaTrigger", "Media").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("DataModel.MediaTrigger", "Media").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Media> MediaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Media>("DataModel.MediaTrigger", "Media");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Media>("DataModel.MediaTrigger", "Media", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Url")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Url : Media
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Url object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Url CreateUrl(global::System.Int64 id, global::System.TimeSpan duration, global::System.String name, global::System.String value)
        {
            Url url = new Url();
            url.Id = id;
            url.Duration = duration;
            url.Name = name;
            url.Value = value;
            return url;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="UsbEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsbEvent : Trigger
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsbEvent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mediaId">Initial value of the MediaId property.</param>
        public static UsbEvent CreateUsbEvent(global::System.Int64 id, global::System.Int64 mediaId)
        {
            UsbEvent usbEvent = new UsbEvent();
            usbEvent.Id = id;
            usbEvent.MediaId = mediaId;
            return usbEvent;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        public static User CreateUser(global::System.Int64 id, global::System.String name, global::System.String email, global::System.String passwordHash)
        {
            User user = new User();
            user.Id = id;
            user.Name = name;
            user.Email = email;
            user.PasswordHash = passwordHash;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupUser", "Workgroup")]
        public EntityCollection<Workgroup> Workgroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Workgroup>("DataModel.WorkgroupUser", "Workgroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Workgroup>("DataModel.WorkgroupUser", "Workgroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "UserUserRights", "UserRights")]
        public EntityCollection<UserRights> UserRights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRights>("DataModel.UserUserRights", "UserRights");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRights>("DataModel.UserUserRights", "UserRights", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="UserRights")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRights : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRights object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserRights CreateUserRights(global::System.Int64 id, global::System.Int64 userId)
        {
            UserRights userRights = new UserRights();
            userRights.Id = id;
            userRights.UserId = userId;
            return userRights;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "UserUserRights", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.UserUserRights", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.UserUserRights", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.UserUserRights", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.UserUserRights", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Video")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Video : Media
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Video object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="aspect">Initial value of the Aspect property.</param>
        public static Video CreateVideo(global::System.Int64 id, global::System.TimeSpan duration, global::System.String name, global::System.Int32 aspect)
        {
            Video video = new Video();
            video.Id = id;
            video.Duration = duration;
            video.Name = name;
            video.Aspect = aspect;
            return video;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Aspect
        {
            get
            {
                return _Aspect;
            }
            set
            {
                OnAspectChanging(value);
                ReportPropertyChanging("Aspect");
                _Aspect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Aspect");
                OnAspectChanged();
            }
        }
        private global::System.Int32 _Aspect;
        partial void OnAspectChanging(global::System.Int32 value);
        partial void OnAspectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Int32 _Volume = 100;
        partial void OnVolumeChanging(global::System.Int32 value);
        partial void OnVolumeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "VideoFile", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DataModel.VideoFile", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DataModel.VideoFile", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DataModel.VideoFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("DataModel.VideoFile", "File", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Workgroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Workgroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Workgroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Workgroup CreateWorkgroup(global::System.Int64 id, global::System.String name)
        {
            Workgroup workgroup = new Workgroup();
            workgroup.Id = id;
            workgroup.Name = name;
            return workgroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentWorkgroupId
        {
            get
            {
                return _ParentWorkgroupId;
            }
            set
            {
                OnParentWorkgroupIdChanging(value);
                ReportPropertyChanging("ParentWorkgroupId");
                _ParentWorkgroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentWorkgroupId");
                OnParentWorkgroupIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentWorkgroupId;
        partial void OnParentWorkgroupIdChanging(Nullable<global::System.Int64> value);
        partial void OnParentWorkgroupIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupHardware", "Hardware")]
        public EntityCollection<Hardware> Hardware
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hardware>("DataModel.WorkgroupHardware", "Hardware");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hardware>("DataModel.WorkgroupHardware", "Hardware", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupUser", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DataModel.WorkgroupUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DataModel.WorkgroupUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupWorkgroup", "Workgroup1")]
        public EntityCollection<Workgroup> ChildrenWorkgroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Workgroup>("DataModel.WorkgroupWorkgroup", "Workgroup1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Workgroup>("DataModel.WorkgroupWorkgroup", "Workgroup1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupWorkgroup", "Workgroup")]
        public Workgroup ParentPorkgroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupWorkgroup", "Workgroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupWorkgroup", "Workgroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Workgroup> ParentPorkgroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workgroup>("DataModel.WorkgroupWorkgroup", "Workgroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Workgroup>("DataModel.WorkgroupWorkgroup", "Workgroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupBandwidthSettings", "BandwidthSettings")]
        public BandwidthSettings BandwidthSettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BandwidthSettings>("DataModel.WorkgroupBandwidthSettings", "BandwidthSettings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BandwidthSettings>("DataModel.WorkgroupBandwidthSettings", "BandwidthSettings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BandwidthSettings> BandwidthSettingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BandwidthSettings>("DataModel.WorkgroupBandwidthSettings", "BandwidthSettings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BandwidthSettings>("DataModel.WorkgroupBandwidthSettings", "BandwidthSettings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupOpeningHours", "OpeningHours")]
        public OpeningHours OpeningHours
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OpeningHours>("DataModel.WorkgroupOpeningHours", "OpeningHours").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OpeningHours>("DataModel.WorkgroupOpeningHours", "OpeningHours").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OpeningHours> OpeningHoursReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OpeningHours>("DataModel.WorkgroupOpeningHours", "OpeningHours");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OpeningHours>("DataModel.WorkgroupOpeningHours", "OpeningHours", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupConnectionSettings", "ConnectionSettings")]
        public ConnectionSettings ConnectionSettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConnectionSettings>("DataModel.WorkgroupConnectionSettings", "ConnectionSettings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConnectionSettings>("DataModel.WorkgroupConnectionSettings", "ConnectionSettings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConnectionSettings> ConnectionSettingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConnectionSettings>("DataModel.WorkgroupConnectionSettings", "ConnectionSettings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConnectionSettings>("DataModel.WorkgroupConnectionSettings", "ConnectionSettings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupMediaRight", "MediaRight")]
        public EntityCollection<MediaRight> MediaRight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MediaRight>("DataModel.WorkgroupMediaRight", "MediaRight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MediaRight>("DataModel.WorkgroupMediaRight", "MediaRight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "GroupWorkgroup", "Group")]
        public EntityCollection<Group> Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("DataModel.GroupWorkgroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("DataModel.GroupWorkgroup", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "WorkgroupMediaOwner", "Media")]
        public EntityCollection<Media> MediaOwned
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Media>("DataModel.WorkgroupMediaOwner", "Media");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Media>("DataModel.WorkgroupMediaOwner", "Media", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Zone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Zone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Zone object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="designId">Initial value of the DesignId property.</param>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        /// <param name="z">Initial value of the Z property.</param>
        /// <param name="w">Initial value of the W property.</param>
        /// <param name="h">Initial value of the H property.</param>
        public static Zone CreateZone(global::System.Int64 id, global::System.Int64 designId, global::System.Double x, global::System.Double y, global::System.String z, global::System.String w, global::System.String h)
        {
            Zone zone = new Zone();
            zone.Id = id;
            zone.DesignId = designId;
            zone.X = x;
            zone.Y = y;
            zone.Z = z;
            zone.W = w;
            zone.H = h;
            return zone;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DesignId
        {
            get
            {
                return _DesignId;
            }
            set
            {
                OnDesignIdChanging(value);
                ReportPropertyChanging("DesignId");
                _DesignId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DesignId");
                OnDesignIdChanged();
            }
        }
        private global::System.Int64 _DesignId;
        partial void OnDesignIdChanging(global::System.Int64 value);
        partial void OnDesignIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private global::System.Double _X;
        partial void OnXChanging(global::System.Double value);
        partial void OnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private global::System.Double _Y;
        partial void OnYChanging(global::System.Double value);
        partial void OnYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Z
        {
            get
            {
                return _Z;
            }
            set
            {
                OnZChanging(value);
                ReportPropertyChanging("Z");
                _Z = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Z");
                OnZChanged();
            }
        }
        private global::System.String _Z;
        partial void OnZChanging(global::System.String value);
        partial void OnZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String W
        {
            get
            {
                return _W;
            }
            set
            {
                OnWChanging(value);
                ReportPropertyChanging("W");
                _W = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("W");
                OnWChanged();
            }
        }
        private global::System.String _W;
        partial void OnWChanging(global::System.String value);
        partial void OnWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String H
        {
            get
            {
                return _H;
            }
            set
            {
                OnHChanging(value);
                ReportPropertyChanging("H");
                _H = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("H");
                OnHChanged();
            }
        }
        private global::System.String _H;
        partial void OnHChanging(global::System.String value);
        partial void OnHChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "DesignZone", "Design")]
        public Design Design
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Design>("DataModel.DesignZone", "Design").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Design>("DataModel.DesignZone", "Design").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Design> DesignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Design>("DataModel.DesignZone", "Design");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Design>("DataModel.DesignZone", "Design", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "ZonePlaylist", "Playlist")]
        public MediaContainer Playlist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaContainer>("DataModel.ZonePlaylist", "Playlist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaContainer>("DataModel.ZonePlaylist", "Playlist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MediaContainer> PlaylistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaContainer>("DataModel.ZonePlaylist", "Playlist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MediaContainer>("DataModel.ZonePlaylist", "Playlist", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
